/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package retorno;

import Ferramentas.InternalFrame.GFrame;
import static Ferramentas.InternalFrame.GFrame.startCursor;
import Ferramentas.Managers.Managers;
import Ferramentas.TableModel.TbModelArray;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.JFileChooser;
import principal.models.TbBoletosGerados;

/**
 *
 * @author ANDRE PORTO
 */
public class Retorno extends GFrame {

    TbModelArray mdRetorno = new TbModelArray();

    /**
     * Creates new form Retorno
     */
    public Retorno() {
        initComponents();
        mdRetorno.setName(tbPagos, "identificação", "dt vencimento", "Nome pagador", "dt credito", "valor");
        mdRetorno.setPreferredWidth(50, 50, 300, 50, 100);
        formataCelulasVLR.setCellRenderer(tbPagos, 4);
        formataCelulasDate.setCellRenderer(tbPagos, 1,3);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPagos = new javax.swing.JTable();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        tbPagos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbPagos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 868, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        if (file.showOpenDialog(this) == 0) {
            new Thread() {

                @Override
                public void run() {
                    startCursor(rootPane);
                    File files = file.getSelectedFile();

                    EntityManager em = Managers.GetManager();
                    SimpleDateFormat format = new SimpleDateFormat("ddMMyy");
                    List<Object[]> lRetorno = new ArrayList();

                    try {
                        BufferedReader ini;
                        ini = new BufferedReader(new InputStreamReader(new FileInputStream(files), "UTF-8"));
                        String vl;
                        vl = ini.readLine();
                        vl = ini.readLine();
                        while (vl.substring(0, 1).equals("1")) {
                            if (!vl.substring(295, 301).isEmpty()) {
                                TbBoletosGerados boleto = em.find(TbBoletosGerados.class, new BigDecimal(vl.substring(62, 70)));
                                if (boleto != null) {
                                    boleto.setDtPagamento(format.parse(vl.substring(295, 301)));
                                    em.merge(boleto);
                                    String val = vl.substring(152, 165);
                                    val = val.substring(0, val.length() - 2) + "." + val.substring(val.length() - 2, val.length());
                                    lRetorno.add(new Object[]{vl.substring(62, 70), format.parse(vl.substring(146, 152)), vl.substring(324, 354), format.parse(vl.substring(295, 301)), new BigDecimal(val)});

                                }
                            }

                            System.out.println("IDENTIFICAÇÃO DO TÍTULO NO BANCO                -" + vl.substring(62, 70));
                            System.out.println("DATA DE VENCIMENTO DO TÍTULO                    -" + vl.substring(146, 152));
                            System.out.println("NOME DO PAGADOR                                 -" + vl.substring(324, 354));
                            System.out.println("DATA DE CRÉDITO DESTA LIQUIDAÇÃO                -" + vl.substring(295, 301));
                            System.out.println("VALOR NOMINAL DO TÍTULO                         -" + vl.substring(152, 165));
                            mdRetorno.setList(lRetorno);
                            vl = ini.readLine();
                        }
                        mdRetorno.setList(lRetorno);
                        em.getTransaction().begin();
                        em.getTransaction().commit();
                        ini.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Retorno.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(Retorno.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    stopCursor(rootPane);
                }

            }.start();

        }

    }//GEN-LAST:event_btBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btBuscar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPagos;
    // End of variables declaration//GEN-END:variables
}
 //  try {
//            BufferedReader ini;
//            ini = new BufferedReader(new InputStreamReader(new FileInputStream("c:/CN12096A.RET"), "UTF-8"));
//            String vl;
//            vl = ini.readLine();
//            System.out.println("DATA DE GERAÇÃO DO ARQUIVO               -   " + vl.substring(94, 100));
//            System.out.println("NÚMERO SEQÜENCIAL DO ARQUIVO RETORNO     -   " + vl.substring(108, 113));
//            System.out.println("DATA DE CRÉDITO DOS LANÇAMENTOS          -   " + vl.substring(113, 119));
//            System.out.println("NÚMERO SEQÜENCIAL DO REGISTRO NO ARQUIVO -   " + vl.substring(394, 400));
//
//            vl = ini.readLine();
//            while (vl.substring(0,1).equals("1")) {
//                System.out.println("IDENTIFICAÇÃO DO TIPO DE INSCRIÇÃO/EMPRESA      -" + vl.substring(1, 3));
//                System.out.println("NÚMERO DE INSCRIÇÃO DA EMPRESA (CPF/CNPJ)       -" + vl.substring(3, 17));
//                System.out.println("IDENTIFICAÇÃO DO TÍTULO NA EMPRESA              -" + vl.substring(37, 62));
//                System.out.println("IDENTIFICAÇÃO DO TÍTULO NO BANCO                -" + vl.substring(62, 70));
//                System.out.println("IDENTIFICAÇÃO DO TÍTULO NO BANCO                -" + vl.substring(85, 93));
//                System.out.println("DATA DE OCORRÊNCIA NO BANCO                     -" + vl.substring(110, 116));
//                System.out.println("Nº DO DOCUMENTO DE COBRANÇA (DUPL, NP ETC)      -" + vl.substring(116, 126));
//                System.out.println("CONFIRMAÇÃO DO NÚMERO DO TÍTULO NO BANCO        -" + vl.substring(126, 134));
//                System.out.println("DATA DE VENCIMENTO DO TÍTULO                    -" + vl.substring(146, 152));
//                System.out.println("VALOR NOMINAL DO TÍTULO                         -" + vl.substring(152, 165));
//                System.out.println("AG. COBRADORA, AG. DE LIQUIDAÇÃO OU BAIXA       -" + vl.substring(168, 172));
//                System.out.println("DAC AG. COBRADORA                               -" + vl.substring(172, 173));
//                System.out.println("ESPÉCIE DO TÍTULO                               -" + vl.substring(173, 175));
//                System.out.println("VALOR DA DESPESA DE COBRANÇA                    -" + vl.substring(175, 188));
//                System.out.println("VALOR DO IOF A SER RECOLHIDO (NOTAS SEGURO)     -" + vl.substring(214, 227));
//                System.out.println("VALOR DO ABATIMENTO CONCEDIDO                   -" + vl.substring(227, 240));
//                System.out.println("VALOR DO DESCONTO CONCEDIDO                     -" + vl.substring(240, 253));
//                System.out.println("VALOR LANÇADO EM CONTA CORRENTE                 -" + vl.substring(253, 266));
//                System.out.println("VALOR DE MORA E MULTA                           -" + vl.substring(266, 279));
//                System.out.println("VALOR DE OUTROS CRÉDITOS                        -" + vl.substring(279, 292));
//                System.out.println("DATA DE CRÉDITO DESTA LIQUIDAÇÃO                -" + vl.substring(295, 301));
//                System.out.println("CÓDIGO DA INSTRUÇÃO CANCELADA                   -" + vl.substring(301, 305));
//                System.out.println("NOME DO PAGADOR                                 -" + vl.substring(324, 354));
//                System.out.println("REGISTROS REJEITADOS OU ALEGAÇÃO DO PAGADOR OU\n"
//                                 + "REGISTRO DE MENSAGEM INFORMATIVA                -" + vl.substring(377, 385));
//                System.out.println("MEIO PELO QUAL O TÍTULO FOI LIQUIDADO           -" + vl.substring(392, 394));
//
//                vl = ini.readLine();
//            }
//            ini.close();
//        } catch (IOException ex) {
//            Logger.getLogger(Retorno.class.getName()).log(Level.SEVERE, null, ex);
//        }
