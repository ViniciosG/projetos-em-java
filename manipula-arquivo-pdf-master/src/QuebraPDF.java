/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.HeaderFooter;
import com.lowagie.text.PageSize;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.BaseFont;
import com.lowagie.text.pdf.PdfContentByte;
import com.lowagie.text.pdf.PdfCopy;
import com.lowagie.text.pdf.PdfImportedPage;
import com.lowagie.text.pdf.PdfReader;
import com.lowagie.text.pdf.PdfWriter;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.docx4j.Docx4jProperties;
import org.docx4j.convert.out.pdf.PdfConversion;
import org.docx4j.convert.out.pdf.viaXSLFO.Conversion;
import org.docx4j.convert.out.pdf.viaXSLFO.PdfSettings;
import org.docx4j.openpackaging.packages.WordprocessingMLPackage;
import org.docx4j.utils.Log4jConfigurator;

/**
 *
 * @author SANTANA
 */
public class QuebraPDF extends javax.swing.JFrame {

    /**
     * Creates new form PDF
     */
    public QuebraPDF() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfAnexo = new javax.swing.JTextField();
        tfDsAnexo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btDividir = new javax.swing.JButton();
        btEnumerar = new javax.swing.JButton();
        bar = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Dividir Arquivo"));

        jLabel2.setText("Arquivo: *");

        tfAnexo.setEditable(false);

        jLabel3.setText("Tamanho mÃ¡ximo por arquivo (kilobyte (KB)): *");

        jLabel19.setText("Campos marcados com * sÃ£o de preenchimento obrigatÃ³rio");

        jButton1.setText("ðŸ”Ž");
        jButton1.setActionCommand("ðŸ”Ž");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btDividir.setText("Dividir");
        btDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDividirActionPerformed(evt);
            }
        });

        btEnumerar.setText("Enumerar");
        btEnumerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnumerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfAnexo, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                            .addComponent(tfDsAnexo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btDividir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btEnumerar))
                            .addComponent(jButton1))
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfAnexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(2, 2, 2)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDsAnexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDividir)
                    .addComponent(btEnumerar))
                .addGap(7, 7, 7)
                .addComponent(jLabel19)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        bar.setIndeterminate(true);
        bar.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
               int retorno = fileChooser.showOpenDialog(this);
        if (retorno == JFileChooser.APPROVE_OPTION) {
            tfAnexo.setText(fileChooser.getSelectedFile().toString());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btDividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDividirActionPerformed

        new Thread() {
            @Override
            public void run() {
                bar.setVisible(true);
                createPDF(tfAnexo.getText());
                quebraPDF(tfAnexo.getText().replaceAll(".docx", ".pdf"), Double.parseDouble(tfDsAnexo.getText().replaceAll(",", ".")));
                bar.setVisible(false);
                JOptionPane.showMessageDialog(null, "Sucesso!");
            }

        }.start();
    }//GEN-LAST:event_btDividirActionPerformed

    private void btEnumerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnumerarActionPerformed
        JFileChooser chooser = new JFileChooser("G:");
        chooser.setMultiSelectionEnabled(true);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        bar.setVisible(true);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File dir = new File(chooser.getSelectedFile().getParent() + "/enumerados");
            dir.mkdir();
            for (File f : chooser.getSelectedFiles()) {
                enumerar(f, dir);
            }
            bar.setVisible(false);

            JOptionPane.showMessageDialog(rootPane, "Terminou");
        }
    }//GEN-LAST:event_btEnumerarActionPerformed

    
    
    private void enumerar(File file, File diretorio) {
        try {
            // cria o reader para o primeiro pdf
            PdfReader reader = new PdfReader(file.toString());
            // n recebe o numero total de pÃ¡ginas
            int n = reader.getNumberOfPages();
            // tamanho da primeira pÃ¡gina
            Rectangle psize = reader.getPageSize(1);

            float width = psize.getWidth();

            // cria segundo pdf
            Document document = new Document(PageSize.A4.rotate());
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(diretorio + "/" + file.getName()));
            document.open();
            // adiciona conteudo ao segundo pdf
            PdfContentByte cb = writer.getDirectContent();
            int i = 0;
            int p = 0;
            while (i < n) {
                document.newPage();
                p++;
                i++;
                PdfImportedPage page1 = writer.getImportedPage(reader, i);
                cb.addTemplate(page1, 0, 0);

                BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED);
                cb.beginText();
                cb.setFontAndSize(bf, 7);
                cb.showTextAligned(PdfContentByte.ALIGN_RIGHT, "pÃ¡g. " + p + " de " + n, width - 20, 15, 0);
                cb.endText();
            }
            document.close();
        } catch (Exception de) {
            de.printStackTrace();

        }
    }
    
    /**
     * Converte docx em PDF
     *
     * @param url = caminho do arquivo
     */
    private static void createPDF(String url) {
        try {
            long start = System.currentTimeMillis();

            // 1) Load DOCX into WordprocessingMLPackage
            Docx4jProperties.getProperties().setProperty("docx4j.Log4j.Configurator.disabled", "true");
            Log4jConfigurator.configure();
            Conversion.log.setLevel(org.apache.log4j.Level.OFF);

            InputStream is = new FileInputStream(new File(url));
            WordprocessingMLPackage wordMLPackage = WordprocessingMLPackage
                    .load(is);

            // 2) Prepare Pdf settings
            PdfSettings pdfSettings = new PdfSettings();

            // 3) Convert WordprocessingMLPackage to Pdf
            OutputStream out = new FileOutputStream(new File(url.replaceAll(".docx", ".pdf")));
            
            PdfConversion converter = new org.docx4j.convert.out.pdf.viaXSLFO.Conversion(
                    wordMLPackage);
            converter.output(out, pdfSettings);

            System.err.println("Generate pdf/HelloWorld.pdf with "
                    + (System.currentTimeMillis() - start) + "ms");

        } catch (Throwable e) {
      //      JOptionPane.showMessageDialog(null, "Arquivo com tamanho ");

            e.printStackTrace();
        }
    }

    /**
     * Dividi arquivo PDF em arquivos menores de acordo com o tamanho passado
     * por parametro
     *
     * @param url = caminho do arquivo
     * @param tamanho = tamanho do arquivo
     */
    private void quebraPDF(String url, double tamanho) {
        try {
            PdfReader reader = new PdfReader(url);
            int nrPaginas = reader.getNumberOfPages();
            Document document = new Document(reader.getPageSizeWithRotation(1));
            float combinedsize = 0;
            int numArq = 1;
            String outFile = url.substring(0, url.indexOf(".pdf"))
                    + "-" + String.format("%03d", numArq) + ".pdf";
            PdfCopy writer = new PdfCopy(document, new FileOutputStream(outFile));
            document.open();
            for (int i = 1; i <= nrPaginas; i++) {
                if (combinedsize == 0 && i != 1) {
                    document = new Document(reader.getPageSizeWithRotation(1));
                    numArq++;
                    outFile = url.substring(0, url.indexOf(".pdf"))
                            + "-" + String.format("%03d", numArq) + ".pdf";
                    writer = new PdfCopy(document, new FileOutputStream(outFile));
                    document.open();    
                } 
                PdfImportedPage page = writer.getImportedPage(reader, i);
                writer.addPage(page);
            
                
                

                
                combinedsize = (float) writer.getCurrentDocumentSize() / 1024;
                if (combinedsize > tamanho - 5) {
                    document.close();
                    combinedsize = 0;
                }
            }
            document.close();
        } catch (IOException | DocumentException ex) {
                   JOptionPane.showMessageDialog(null, "Erro ao tentar dividir arquivo");
            Logger.getLogger(QuebraPDF.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuebraPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuebraPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuebraPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuebraPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuebraPDF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar bar;
    private javax.swing.JButton btDividir;
    private javax.swing.JButton btEnumerar;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfAnexo;
    private javax.swing.JTextField tfDsAnexo;
    // End of variables declaration//GEN-END:variables
}
